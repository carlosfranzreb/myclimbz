name: Create, publish and test a Docker image

on:
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: carlosfranzreb/boulders/myclimbz

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: build-push
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Install app dependencies
        run: pip install -r requirements.txt

      - name: Install ChromeDriver
        uses: nanasess/setup-chromedriver@v2

      - name: Install dependencies for testing
        run: pip install -r requirements-test.txt

      - name: Start XVFB
        run: Xvfb :99 &

      - name: Run tests
        # run: python -m pytest tests/ --env=ci
        run: python debug_ci.py
        env:
          DISPLAY: :99

    services:
      app:
        image: ghcr.io/carlosfranzreb/boulders/myclimbz:pr-${{ github.event.number }}
        ports:
          - 5000:5000
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        env:
          FLASK_DEBUG: 1
          DISABLE_LOGIN: 1
          CLIMBZ_DB_URI: sqlite:///test_100.db
